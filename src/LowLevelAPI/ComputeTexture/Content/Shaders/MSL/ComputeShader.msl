#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct ComputeData
{
    float time;
    float width;
    float height;
    float padding;
};

struct type_ParamsBuffer
{
    ComputeData data;
};

kernel void CS(constant type_ParamsBuffer& ParamsBuffer [[buffer(0)]], texture2d<float, access::write> Output [[texture(0)]], uint3 gl_GlobalInvocationID [[thread_position_in_grid]])
{
    float2 _34 = float2(ParamsBuffer.data.width, ParamsBuffer.data.height);
    Output.write(float4((float2(gl_GlobalInvocationID.xy) / _34) + (float2(0.5) / _34), 0.5 + (0.5 * sin(ParamsBuffer.data.time)), 1.0), uint2(gl_GlobalInvocationID.xy));
}

