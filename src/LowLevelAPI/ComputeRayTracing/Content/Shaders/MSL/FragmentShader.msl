#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_ParamsBuffer
{
    uint Samples;
    uint IsPathTracing;
};

struct PS_out
{
    float4 out_var_SV_Target [[color(0)]];
};

struct PS_in
{
    float2 in_var_TEXCOORD [[user(locn0)]];
};

fragment PS_out PS(PS_in in [[stage_in]], constant type_ParamsBuffer& ParamsBuffer [[buffer(0)]], texture2d<float> DiffuseTexture [[texture(0)]], sampler Sampler [[sampler(0)]])
{
    PS_out out = {};
    out.out_var_SV_Target = float4(DiffuseTexture.sample(Sampler, in.in_var_TEXCOORD).xyz, (ParamsBuffer.IsPathTracing != 0u) ? (1.0 / float(ParamsBuffer.Samples)) : 1.0);
    return out;
}

