#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

constant float _29 = {};

struct PS_out
{
    float4 out_var_SV_Target [[color(0)]];
};

struct PS_in
{
    float4 in_var_TEXCOORD0 [[user(locn0)]];
    float3 in_var_TEXCOORD1 [[user(locn1)]];
    float3 in_var_TEXCOORD2 [[user(locn2)]];
};

fragment PS_out PS(PS_in in [[stage_in]], texturecube_array<float> CubeTexture [[texture(0)]], sampler Sampler [[sampler(0)]], float4 gl_FragCoord [[position]])
{
    PS_out out = {};
    out.out_var_SV_Target = float4(CubeTexture.sample(Sampler, float4(reflect(normalize(in.in_var_TEXCOORD1), normalize(in.in_var_TEXCOORD2)), float(int(((float2((in.in_var_TEXCOORD0.xy / float2(in.in_var_TEXCOORD0.w)).x, _29) + float2(1.0)) * 0.5).x * 4.0))).xyz, uint(round(float4(reflect(normalize(in.in_var_TEXCOORD1), normalize(in.in_var_TEXCOORD2)), float(int(((float2((in.in_var_TEXCOORD0.xy / float2(in.in_var_TEXCOORD0.w)).x, _29) + float2(1.0)) * 0.5).x * 4.0))).w))).xyz, 1.0);
    return out;
}

