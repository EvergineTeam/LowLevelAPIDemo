#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Matrices
{
    float4x4 viewProj;
};

struct VS_out
{
    float3 out_var_NORMAL [[user(locn0)]];
    float3 out_var_TEXCOORD [[user(locn1)]];
    float4 gl_Position [[position]];
};

struct VS_in
{
    float3 in_var_POSITION [[attribute(0)]];
    float3 in_var_NORMAL [[attribute(1)]];
    float2 in_var_TEXCOORD0 [[attribute(2)]];
    float4 in_var_TEXCOORD1 [[attribute(3)]];
    float4 in_var_TEXCOORD2 [[attribute(4)]];
    float4 in_var_TEXCOORD3 [[attribute(5)]];
    float4 in_var_TEXCOORD4 [[attribute(6)]];
    int in_var_TEXCOORD5 [[attribute(7)]];
};

vertex VS_out VS(VS_in in [[stage_in]], constant type_Matrices& Matrices [[buffer(0)]])
{
    VS_out out = {};
    float4x4 _47 = Matrices.viewProj * float4x4(in.in_var_TEXCOORD1, in.in_var_TEXCOORD2, in.in_var_TEXCOORD3, in.in_var_TEXCOORD4);
    float3 _61 = float3(in.in_var_TEXCOORD0.x, in.in_var_TEXCOORD0.y, float3(0.0).z);
    _61.z = float(in.in_var_TEXCOORD5);
    out.gl_Position = _47 * float4(in.in_var_POSITION, 1.0);
    out.out_var_NORMAL = (_47 * float4(in.in_var_NORMAL, 0.0)).xyz;
    out.out_var_TEXCOORD = _61;
    return out;
}

