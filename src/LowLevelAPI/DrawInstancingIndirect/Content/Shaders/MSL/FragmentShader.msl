#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct PS_out
{
    float4 out_var_SV_Target [[color(0)]];
};

struct PS_in
{
    float3 in_var_NORMAL [[user(locn0)]];
    float3 in_var_TEXCOORD [[user(locn1)]];
};

fragment PS_out PS(PS_in in [[stage_in]], texture2d_array<float> DiffuseTexture [[texture(0)]], sampler Sampler [[sampler(0)]])
{
    PS_out out = {};
    float4 _34 = DiffuseTexture.sample(Sampler, in.in_var_TEXCOORD.xy, uint(round(in.in_var_TEXCOORD.z)));
    if ((_34.w - 0.5) < 0.0)
    {
        discard_fragment();
    }
    out.out_var_SV_Target = _34 * (0.5 + (fast::clamp(dot(in.in_var_NORMAL, float3(0.0, 0.0, -1.0)), 0.0, 1.0) * 0.5));
    return out;
}

