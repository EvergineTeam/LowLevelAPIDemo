#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Matrices
{
    uint IsTextured;
    float4x4 worldViewProj;
};

struct PS_out
{
    float4 out_var_SV_Target [[color(0)]];
};

struct PS_in
{
    float4 in_var_COLOR [[user(locn0)]];
    float2 in_var_TEXCOORD [[user(locn1)]];
};

fragment PS_out PS(PS_in in [[stage_in]], constant type_Matrices& Matrices [[buffer(0)]], texture2d<float> DiffuseTexture [[texture(0)]], sampler Sampler [[sampler(0)]])
{
    PS_out out = {};
    float4 _46;
    switch (0u)
    {
        default:
        {
            if (Matrices.IsTextured != 0u)
            {
                _46 = DiffuseTexture.sample(Sampler, in.in_var_TEXCOORD);
                break;
            }
            else
            {
                _46 = in.in_var_COLOR;
                break;
            }
        }
    }
    out.out_var_SV_Target = _46;
    return out;
}

